@using Domain
@using System.Collections
@model Domain.Order

@{
    ViewData["Title"] = "Details";
    
}

<h1>Details</h1>

<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.UserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TotalPrice)
        </dt>
        <dd class = "col-sm-10">
            $@Html.DisplayFor(model => model.TotalPrice)
        </dd>
      
    </dl>
</div>
     <table class="table">
        <thead>
        <tr>
            
            <th>Id</th>
        <th>
            Name
        </th>
       
            <th>
                Quantity
            </th>
            <th>
                Unit price
            </th>
            <th>
                Total price
            </th>
         </tr>
                </thead>

  
    <tbody>
     
   @foreach (var p in Model.ProductsOrdered)
     {
            <tr>
                  
            <td>
                @p.Product.ProductId
            </td>
            <td>
                     @p.Product.ProductName
            </td>
              
              
            <td>
                @p.Quantity
            </td>
            <td> $@p.UnitPrice</td>
             <td> $@p.TotalPrice</td>

            </tr>
                 
            
     }  
  
    </tbody>
            
      </table>

 <div>
    <a asp-action="Edit" asp-route-id="@Model.OrderId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
